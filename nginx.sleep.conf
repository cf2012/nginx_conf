
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # 加载 Math库,并获得一个随机种子. p.s. lua5.1中, 第一个随机数不随机. 所以扔掉.
    init_by_lua 'require "math"; math.randomseed(ngx.time()); math.random()';

    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }
		

	location /sleep {
		content_by_lua '
		    if math.random() < 0.1 then
			ngx.say("Good luck")
  		 	ngx.eof()
		    else
			local s = math.ceil(math.random() * 6 )  --> 随机睡眠1~6秒
		        ngx.sleep( s )
		        ngx.say("sleep " .. s .. "s & wake up")
		        ngx.eof()  -- descent HTTP client will close the connection at this point
		    -- access MySQL, PostgreSQL, Redis, Memcached, and etc here...
	            end
		';
	}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}
